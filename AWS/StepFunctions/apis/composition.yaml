apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xstatemachine.sfnaws.example.com
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: sfn.aws.example.com/v1alpha1
    kind: XStateMachine
  mode: Pipeline
  pipeline:
    - step: go-templating
      functionRef:
        name: crossplane-contrib-function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: "{{- $spec := $.observed.composite.resource.spec }}\n\n{{- $logGroupArn := (dig \"resources\" \"cloudwatch-log-group\" \"resource\" \"status\" \"atProvider\" \"arn\" \"\" $.observed ) }}\n{{- $stateMachineArn := (dig \"resources\" \"state-machine\" \"resource\" \"status\" \"atProvider\" \"arn\" \"\" $.observed ) }}\n\n# if user doesn't specify a role, create one\n{{- $roleArn :=\"\" }}\n{{- if $spec.stateMachineParameters.roleArn }}\n{{- $roleArn = $spec.stateMachineParameters.roleArn }}\n{{- else }}\n{{- $roleArn = (dig \"resources\" \"statemachine-role\" \"resource\" \"status\" \"atProvider\" \"arn\" \"\" $.observed ) }}\n---\napiVersion: iam.aws.upbound.io/v1beta1\nkind: Role\nmetadata:\n  labels:\n  {{ $spec.commonLabels | toYaml | nindent 4 }}\n  annotations:\n    gotemplating.fn.crossplane.io/composition-resource-name: statemachine-role\nspec:\n  deletionPolicy: {{ default \"Delete\" $spec.deletionPolicy }}\n  providerConfigRef:\n    name: {{ default \"default\" $spec.providerConfigName }}\n  forProvider:\n    assumeRolePolicy: |\n      {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n              \"Service\": \"states.amazonaws.com\"\n            },\n            \"Action\": \"sts:AssumeRole\"\n          }\n        ]\n      }\n    inlinePolicy: \n    - name: \"sfn-cloudwatchlogs\"\n      policy: |\n        {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": [\n                \"logs:CreateLogDelivery\",\n                    \"logs:GetLogDelivery\",\n                \"logs:UpdateLogDelivery\",\n                \"logs:DeleteLogDelivery\",\n                \"logs:ListLogDeliveries\",\n                \"logs:PutResourcePolicy\",\n                \"logs:DescribeResourcePolicies\",\n                  \"logs:DescribeLogGroups\"\n              ],\n              \"Resource\": \"*\"\n            }{{- if $spec.stateMachineParameters.tracingEnabled -}},\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": [\n                  \"xray:PutTraceSegments\",\n                  \"xray:PutTelemetryRecords\",\n                  \"xray:GetSamplingRules\",\n                  \"xray:GetSamplingTargets\"\n              ],\n              \"Resource\": [\n                  \"*\"\n              ]\n            }\n            {{- end -}}\n          ]\n        }\n{{ end }}\n    tags:\n      {{ $spec.tags | toYaml | nindent 6 }}\n---\napiVersion: cloudwatchlogs.aws.upbound.io/v1beta1\nkind: Group\nmetadata:\n  labels:\n    {{ $spec.commonLabels | toYaml | nindent 4 }}\n  annotations:\n    gotemplating.fn.crossplane.io/composition-resource-name: cloudwatch-log-group\nspec:\n  deletionPolicy: {{ default \"Delete\" $spec.deletionPolicy }}\n  providerConfigRef:\n    name: {{ default \"default\" $spec.providerConfigName }}\n  forProvider:\n    region: {{ $spec.region }}\n    retentionInDays: {{ $spec.cloudWatchLogParameters.retentionInDays | int }}\n    tags:\n      {{ $spec.tags | toYaml | nindent 6 }}\n{{ if and $logGroupArn $roleArn }}\n---\napiVersion: sfn.aws.upbound.io/v1beta1\nkind: StateMachine\nmetadata:\n  labels:\n    {{ $spec.commonLabels | toYaml | nindent 4 }}\n  annotations:\n    gotemplating.fn.crossplane.io/composition-resource-name: state-machine\nspec:\n  deletionPolicy: {{ default \"Delete\" $spec.deletionPolicy }}\n  providerConfigRef:\n    name: {{ default \"default\" $spec.providerConfigName }}\n  forProvider:\n    publish: {{ default false $spec.stateMachineParameters.publish }}\n    region: {{ $spec.region }}\n    loggingConfiguration:\n    - includeExecutionData: {{ default false $spec.cloudWatchLogParameters.includeExecutionData }}\n      level: {{ default \"ERROR\" $spec.cloudWatchLogParameters.logLevel }}\n      logDestination: \"{{ $logGroupArn }}:*\"\n    definition: {{ $spec.stateMachineParameters.definition | toJson }}\n    roleArn: {{ $roleArn }}\n    tags:\n      {{ $spec.tags | toYaml | nindent 6 }}\n    tracingConfiguration:\n    - enabled: {{ default false $spec.stateMachineParameters.tracingEnabled }}\n    type: EXPRESS # required for logging\n{{ end }}\n---\napiVersion: {{ $.observed.composite.resource.apiVersion }}\nkind: {{ $.observed.composite.resource.kind }}\nstatus:\n{{ if $logGroupArn }}\n  cloudWatchLogGroupArn: {{ $logGroupArn }}\n{{ end }}\n{{ if $roleArn }}\n  iamRoleArn: {{ $roleArn }}\n{{ end }}\n{{ if $stateMachineArn }}\n  stateMachineArn: {{ $stateMachineArn }}\n{{ end }}\n  # Status for each resource\n  resourceStatus:\n  {{ range $key, $resource := $.observed.resources }}\n    {{ $key }}:\n      {{ (getResourceCondition \"Ready\" $resource) | toYaml | nindent 6 }}\n  {{ end }}\n"
    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: crossplane-contrib-function-auto-ready
