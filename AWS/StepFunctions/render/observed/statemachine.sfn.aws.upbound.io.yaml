apiVersion: sfn.aws.upbound.io/v1beta1
kind: StateMachine
metadata:
  annotations:
    crossplane.io/composition-resource-name: state-machine
    crossplane.io/external-create-pending: "2024-04-25T20:18:46Z"
    crossplane.io/external-create-succeeded: "2024-04-25T20:18:46Z"
    crossplane.io/external-name: hello-world-z2w4c
  creationTimestamp: "2024-04-25T20:18:45Z"
  finalizers:
  - finalizer.managedresource.crossplane.io
  generateName: hello-world-
  generation: 2
  labels:
    app.example.com/costCenter: "12345"
    app.example.com/usage: dev
    crossplane.io/claim-name: ""
    crossplane.io/claim-namespace: ""
    crossplane.io/composite: hello-world
  name: hello-world-z2w4c
  ownerReferences:
  - apiVersion: sfn.aws.example.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XStateMachine
    name: hello-world
    uid: 45eb138c-7a8c-4108-991c-728a4b9aff82
  resourceVersion: "88550"
  uid: cfecb048-4123-413f-a69f-ddedca405df3
spec:
  deletionPolicy: Delete
  forProvider:
    definition: |
      {
        "Comment": "A Hello World example demonstrating various state types of the Amazon States Language. It is composed of flow control states only, so it does not need resources to run.",
        "StartAt": "Pass",
        "States": {
          "Pass": {
            "Comment": "A Pass state passes its input to its output, without performing work. They can also generate static JSON output, or transform JSON input using filters and pass the transformed data to the next state. Pass states are useful when constructing and debugging state machines.",
            "Type": "Pass",
            "Result": {
              "IsHelloWorldExample": true
            },
            "Next": "Hello World example?"
          },
          "Hello World example?": {
            "Comment": "A Choice state adds branching logic to a state machine. Choice rules can implement many different comparison operators, and rules can be combined using And, Or, and Not",
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.IsHelloWorldExample",
                "BooleanEquals": true,
                "Next": "Yes"
              },
              {
                "Variable": "$.IsHelloWorldExample",
                "BooleanEquals": false,
                "Next": "No"
              }
            ],
            "Default": "Yes"
          },
          "Yes": {
            "Type": "Pass",
            "Next": "Wait 3 sec"
          },
          "No": {
            "Type": "Fail",
            "Cause": "Not Hello World"
          },
          "Wait 3 sec": {
            "Comment": "A Wait state delays the state machine from continuing for a specified time.",
            "Type": "Wait",
            "Seconds": 3,
            "Next": "Parallel State"
          },
          "Parallel State": {
            "Comment": "A Parallel state can be used to create parallel branches of execution in your state machine.",
            "Type": "Parallel",
            "Next": "Hello World",
            "Branches": [
              {
                "StartAt": "Hello",
                "States": {
                  "Hello": {
                    "Type": "Pass",
                    "End": true
                  }
                }
              },
              {
                "StartAt": "World",
                "States": {
                  "World": {
                    "Type": "Pass",
                    "End": true
                  }
                }
              }
            ]
          },
          "Hello World": {
            "Type": "Pass",
            "End": true
          }
        }
      }
    loggingConfiguration:
    - includeExecutionData: false
      level: ERROR
      logDestination: arn:aws:logs:us-west-1:609897127049:log-group:hello-world-2hns2:*
    publish: false
    region: us-west-1
    roleArn: arn:aws:iam::609897127049:role/hello-world-8q9mk
    tags:
      crossplane-kind: statemachine.sfn.aws.upbound.io
      crossplane-name: hello-world-z2w4c
      crossplane-providerconfig: default
      env: dev
      kind: crossplane-example
    tracingConfiguration:
    - enabled: true
    type: EXPRESS
  initProvider: {}
  managementPolicies:
  - '*'
  providerConfigRef:
    name: default
status:
  atProvider:
    arn: arn:aws:states:us-west-1:609897127049:stateMachine:hello-world-z2w4c
    creationDate: "2024-04-25T20:18:46Z"
    definition: |
      {
        "Comment": "A Hello World example demonstrating various state types of the Amazon States Language. It is composed of flow control states only, so it does not need resources to run.",
        "StartAt": "Pass",
        "States": {
          "Pass": {
            "Comment": "A Pass state passes its input to its output, without performing work. They can also generate static JSON output, or transform JSON input using filters and pass the transformed data to the next state. Pass states are useful when constructing and debugging state machines.",
            "Type": "Pass",
            "Result": {
              "IsHelloWorldExample": true
            },
            "Next": "Hello World example?"
          },
          "Hello World example?": {
            "Comment": "A Choice state adds branching logic to a state machine. Choice rules can implement many different comparison operators, and rules can be combined using And, Or, and Not",
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.IsHelloWorldExample",
                "BooleanEquals": true,
                "Next": "Yes"
              },
              {
                "Variable": "$.IsHelloWorldExample",
                "BooleanEquals": false,
                "Next": "No"
              }
            ],
            "Default": "Yes"
          },
          "Yes": {
            "Type": "Pass",
            "Next": "Wait 3 sec"
          },
          "No": {
            "Type": "Fail",
            "Cause": "Not Hello World"
          },
          "Wait 3 sec": {
            "Comment": "A Wait state delays the state machine from continuing for a specified time.",
            "Type": "Wait",
            "Seconds": 3,
            "Next": "Parallel State"
          },
          "Parallel State": {
            "Comment": "A Parallel state can be used to create parallel branches of execution in your state machine.",
            "Type": "Parallel",
            "Next": "Hello World",
            "Branches": [
              {
                "StartAt": "Hello",
                "States": {
                  "Hello": {
                    "Type": "Pass",
                    "End": true
                  }
                }
              },
              {
                "StartAt": "World",
                "States": {
                  "World": {
                    "Type": "Pass",
                    "End": true
                  }
                }
              }
            ]
          },
          "Hello World": {
            "Type": "Pass",
            "End": true
          }
        }
      }
    description: ""
    id: arn:aws:states:us-west-1:609897127049:stateMachine:hello-world-z2w4c
    loggingConfiguration:
    - includeExecutionData: false
      level: ERROR
      logDestination: arn:aws:logs:us-west-1:609897127049:log-group:hello-world-2hns2:*
    publish: false
    revisionId: ""
    roleArn: arn:aws:iam::609897127049:role/hello-world-8q9mk
    stateMachineVersionArn: ""
    status: ACTIVE
    tags:
      crossplane-kind: statemachine.sfn.aws.upbound.io
      crossplane-name: hello-world-z2w4c
      crossplane-providerconfig: default
      env: dev
      kind: crossplane-example
    tagsAll:
      crossplane-kind: statemachine.sfn.aws.upbound.io
      crossplane-name: hello-world-z2w4c
      crossplane-providerconfig: default
      env: dev
      kind: crossplane-example
    tracingConfiguration:
    - enabled: true
    type: EXPRESS
  conditions:
  - lastTransitionTime: "2024-04-25T20:18:48Z"
    reason: Available
    status: "True"
    type: Ready
  - lastTransitionTime: "2024-04-25T20:18:46Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-04-25T20:18:47Z"
    reason: Success
    status: "True"
    type: LastAsyncOperation
